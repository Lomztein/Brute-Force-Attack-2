%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: d4ea7b1c338dc464c8722bd3ef09ba2f, type: 3}
  m_Name: ModularSoftware
  m_EditorClassIdentifier: 
  Name: Modular Software
  Identifier: Core.ModularSoftware
  Description: Install a module into an assembly.
  RewardDescription: 
  FunFact: Perhaps the most common programming pattern used throughout the development
    of BFA2 is the strategy pattern, which is quite appropiate for a strategy game.
  Sprite:
    Path: 
    Texture: {fileID: 0}
    Rect:
      serializedVersion: 2
      x: 0
      y: 0
      width: 0
      height: 0
    Pivot: {x: 0.5, y: 0.5}
    PixelsPerUnit: 16
  Hidden: 0
  Requirement:
    rid: 1449225152314474652
  Reward:
    rid: -2
  references:
    version: 2
    RefIds:
    - rid: -2
      type: {class: , ns: , asm: }
    - rid: 1449225152314474652
      type: {class: ModuleUpgradeRequirement, ns: Lomztein.BFA2.Player.Progression.Achievements.Requirements,
        asm: Assembly-CSharp}
      data:
        CheckAgainst:
        - rid: 1449225152314475088
        ApplicableModuleIdentifiers: []
        RequiredAmount: 1
    - rid: 1449225152314475088
      type: {class: HasModulesFilter, ns: Lomztein.BFA2.Modification.Filters, asm: Assembly-CSharp}
      data:
        ApplicableModuleIdentifiers: []
        RequiredAmount: 1
